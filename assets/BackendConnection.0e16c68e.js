import{_ as d,o as a,c as i,t as c,a as l}from"./index.17f9246e.js";const p={data(){return{text:"",type:"",time:0}},methods:{show(r,e="info",t=5e3){this.text=r,this.type=e,this.time=new Date().getTime()+t,setInterval(()=>{new Date().getTime()-this.time>=0&&(this.text="")},100)}}},h={key:0,class:"alert alert-success",role:"alert"},u={key:1,class:"alert alert-danger",role:"alert"},g={key:2,class:"alert alert-warning",role:"alert"},m={key:3,class:"alert alert-info",role:"alert"};function y(r,e,t,s,o,n){return a(),i("div",null,[o.text&&o.type=="success"?(a(),i("div",h,c(o.text),1)):l("",!0),o.text&&o.type=="error"?(a(),i("div",u,c(o.text),1)):l("",!0),o.text&&o.type=="warning"?(a(),i("div",g,c(o.text),1)):l("",!0),o.text&&o.type=="info"?(a(),i("div",m,c(o.text),1)):l("",!0)])}const S=d(p,[["render",y]]),f={props:["token","moduleName"],emits:["showMessage"],data(){return{moduleServer:"https://processmanager.k2ksoluciones.com/api/"}},methods:{async login(r){try{const e={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(r)},s=await(await fetch(this.moduleServer,e)).json();return console.log(s),s}catch(e){console.log(e),this.$emit("showMessage","No se pudo obtener los registros de la base de datos.","error")}},async getAll(r){try{const e={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({METODO:r,token:this.token,pagina:0,cantidad:100})};console.log(e);const s=await(await fetch(this.moduleServer,e)).json();if(console.log(s),s.codigoResultado==-99)this.$router.push("/logout");else if(s.codigoResultado==-95){const o=await this.getAll("mis_permisos");console.log(o)}return s}catch(e){console.log(e),this.$emit("showMessage","No se pudo obtener los registros de la base de datos.","error")}},async getParams(r,e){try{const t={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({METODO:r,token:this.token,pagina:0,cantidad:e.limit,latitud:e.latitude,longitud:e.longitude,radio:e.zoom})},o=await(await fetch(this.moduleServer,t)).json();return console.log(o),o.codigoResultado==-99&&this.$router.push("/logout"),o}catch(t){console.log(t),this.$emit("showMessage","No se pudo obtener los registros de la base de datos.","error")}},async getOne(r){try{const e={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({METODO:method_name,token:this.token,pagina:0,cantidad:100})},s=await(await fetch(this.moduleServer+this.moduleName+"/"+r,e)).json();return console.log(s),s.codigoResultado==-99&&this.$router.push("/logout"),s}catch(e){console.log(e),this.$emit("showMessage","No se pudo obtener el registro de la base de datos.","error")}},async createOne(r,e){try{const t={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({...e,METODO:r,token:this.token})},o=await(await fetch(this.moduleServer,t)).json();return console.log(o),o.codigoResultado==-99&&this.$router.push("/logout"),o}catch(t){console.log(t),this.$emit("showMessage","No se pudo crear el nuevo registro en la base de datos.","error")}},async updateOne(r,e){try{const t={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({...e,METODO:r,token:this.token})};console.log(t);const o=await(await fetch(this.moduleServer,t)).json();return console.log(o),o.codigoResultado==-99&&this.$router.push("/logout"),o}catch(t){console.log(t),this.$emit("showMessage","No se pudo actualizar el registro en la base de datos.","error")}},async deleteOne(r,e,t){try{const s={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({...e,reason:t,METODO:r,token:this.token})},n=await(await fetch(this.moduleServer,s)).json();return console.log(n),n.codigoResultado==-99&&this.$router.push("/logout"),n}catch(s){console.log(s),this.$emit("showMessage","No se pudo eliminar el registro de la base de datos.","error")}},async uploadFile(r,e){try{const t=new FormData;t.append("file",e),t.append("model",JSON.stringify({METODO:r,token:this.token}));const s={method:"POST",headers:{Accept:"application/json"},body:t},n=await(await fetch(this.moduleServer,s)).json();return console.log(n),n.codigoResultado==-99&&this.$router.push("/logout"),n}catch(t){console.log(t),this.$emit("showMessage","No se pudo crear el nuevo registro en la base de datos.","error")}}}};function O(r,e,t,s,o,n){return null}const _=d(f,[["render",O]]);export{S as A,_ as B};
